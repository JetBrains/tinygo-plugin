<idea-plugin>
    <id>org.jetbrains.plugins.tinygo</id>
    <name>TinyGo</name>
    <vendor url="https://www.jetbrains.com/go/">JetBrains</vendor>
    <category>Languages</category>

    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.plugins.go</depends>
    <depends>org.intellij.intelliLang</depends>
    <depends>com.intellij.modules.json</depends>
    <actions>
        <action class="org.jetbrains.tinygoplugin.services.CreateFileAction">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
    </actions>
    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable parentId="go" instance="org.jetbrains.tinygoplugin.services.TinyGoSettingsService"
                             id="org.jetbrains.tinygoplugin.services.TinyGoSettingsService"
                             key="settings.title" bundle="messages.TinyGo"/>
        <configurationType implementation="org.jetbrains.tinygoplugin.runconfig.TinyGoRunConfigurationType"/>
        <directoryProjectGenerator implementation="org.jetbrains.tinygoplugin.project.wizard.TinyGoProjectGenerator"/>
        <moduleBuilder builderClass="org.jetbrains.tinygoplugin.project.wizard.TinyGoModuleBuilder"/> <!-- for IDEA -->
        <localInspection language="go" groupKey="inspection.bundle.key"
                         bundle="messages.TinyGo" key="inspection.import.unsupported.fix"
                         groupBundle="messages.TinyGo" enabledByDefault="true"
                         level="ERROR"
                         implementationClass="org.jetbrains.tinygoplugin.inspections.libraries.TinyGoImportInspection"/>
        <localInspection language="go" groupKey="inspection.bundle.key"
                         bundle="messages.TinyGo" key="inspection.import.unsupported.fix"
                         groupBundle="messages.TinyGo" enabledByDefault="true"
                         level="ERROR"
                         implementationClass="org.jetbrains.tinygoplugin.inspections.libraries.TinyGoMachineDependentTestInspection"/>
        <localInspection language="go" groupKey="inspection.bundle.key"
                         bundle="messages.TinyGo" key="inspection.interface.name"
                         groupBundle="messages.TinyGo" enabledByDefault="true"
                         level="WARNING"
                         implementationClass="org.jetbrains.tinygoplugin.inspections.TinyGoInterfaceInspection"/>
        <localInspection language="go" groupKey="inspection.bundle.key"
                         bundle="messages.TinyGo" key="inspection.go.statement.name"
                         groupBundle="messages.TinyGo" enabledByDefault="true"
                         level="ERROR"
                         implementationClass="org.jetbrains.tinygoplugin.inspections.TinyGoStatementInspection"/>

        <additionalLibraryRootsProvider implementation="org.jetbrains.tinygoplugin.services.TinyGoLibraryProvider"/>
        <runConfigurationProducer id="TinyGoFlashConfigurationProducer"
                                  implementation="org.jetbrains.tinygoplugin.runconfig.TinyGoFlashRunConfigurationProducer"/>
        <runConfigurationProducer id="TinyGoRunConfigurationProducer"
                                  implementation="org.jetbrains.tinygoplugin.runconfig.TinyGoEmulateRunConfigurationProducer"/>
        <runConfigurationProducer id="TinyGoTestConfigurationProducer"
                                  implementation="org.jetbrains.tinygoplugin.runconfig.TinyGoTestRunConfigurationProducer"/>
        <runConfigurationProducer id="TinyGoBuildConfigurationProducer"
                                  implementation="org.jetbrains.tinygoplugin.runconfig.TinyGoBuildRunConfigurationProducer"/>
        <runConfigurationProducer id="TinyGoHeapAllocConfigurationProducer"
                                  implementation="org.jetbrains.tinygoplugin.runconfig.TinyGoHeapAllocRunConfigurationProducer"/>
        <runLineMarkerContributor language="go"
                                  implementationClass="org.jetbrains.tinygoplugin.runconfig.TinyGoRunLineMarkerContributor"/>
        <runLineMarkerContributor language="go"
                                  implementationClass="org.jetbrains.tinygoplugin.runconfig.TinyGoTestRunLineMarkerContributor"/>
        <defaultLiveTemplates file="/liveTemplates/TinyGoAsm.xml"/>
        <liveTemplateContext contextId="TINYGOAVR" implementation="org.jetbrains.tinygoplugin.liveTemplates.TinyGoAsmAvr"/>
        <liveTemplateContext contextId="TINYGOARM" implementation="org.jetbrains.tinygoplugin.liveTemplates.TinyGoAsmArm"/>
        <liveTemplateContext contextId="TINYGOARM64" implementation="org.jetbrains.tinygoplugin.liveTemplates.TinyGoAsmArm64"/>
        <toolWindow id="TinyGo: Heap Allocations"
                    factoryClass="org.jetbrains.tinygoplugin.heapAllocations.toolWindow.TinyGoHeapAllocsToolWindowFactory"
                    icon="/icons/tinyGo.svg"
                    anchor="right"
                    canCloseContents="true"
                    secondary="true"
        />
        <httpRequestHandler implementation="org.jetbrains.tinygoplugin.preview.TinyGoPreviewHttpHandler" order="first"/>
        <fileEditorProvider implementation="org.jetbrains.tinygoplugin.preview.TinyGoPreviewFileEditorProvider"/>
        <fileType name="AVR assembly"
                  implementationClass="org.jetbrains.tinygoplugin.lang.avrAsm.AvrAsmFileType"
                  fieldName="INSTANCE"
                  language="AVRASM"
                  extensions="avr.asm"/>
        <lang.parserDefinition
                language="AVRASM"
                implementationClass="org.jetbrains.tinygoplugin.lang.avrAsm.AvrAsmParserDefinition"/>
        <lang.syntaxHighlighterFactory
                language="AVRASM"
                implementationClass="org.jetbrains.tinygoplugin.lang.avrAsm.AvrAsmSyntaxHighlighterFactory"/>

        <iconMapper mappingFile="TinyGoIconMappings.json"/>
    </extensions>
    <extensions defaultExtensionNs="com.goide">
        <importResolver implementation="org.jetbrains.tinygoplugin.services.TinyGoImportResolver" order="before vgo"/>
        <importsFilter implementation="org.jetbrains.tinygoplugin.services.TinyGoImportsFilter"/>
        <rootsProvider implementation="org.jetbrains.tinygoplugin.services.TinyGoRootsProvider" order="first"/>
        <sdk.sdkVetoer implementation="org.jetbrains.tinygoplugin.sdk.TinyGoBasedSdkVetoer"/>
    </extensions>
    <extensions defaultExtensionNs="org.intellij.intelliLang">
        <languageSupport implementation="org.jetbrains.tinygoplugin.injection.TinyGoInjectionSupport"/>
        <injectionConfig config="injections/tinygoInjections.xml"/>
    </extensions>
</idea-plugin>
